'use client';

import { ScratchToReveal } from '@/components/magicui/scratch-to-reveal';
import { useEffect, useMemo, useRef } from 'react';
import { useWindowSize } from 'usehooks-ts';
import WordCloud, { type ListEntry } from 'wordcloud';

const RetroWordcloud = () => {
  const { width = 0, height = 0 } = useWindowSize();
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const list = useMemo<ListEntry[]>(() => {
    // TODO: translate
    return [
      ['focus', 5],
      ['clarity', 4],
      ['attention', 3],
      ['vision', 2],
      ['growth', 5],
      ['learning', 4],
      ['progress', 3],
      ['skill', 2],
      ['motivation', 5],
      ['drive', 4],
      ['engagement', 3],
      ['commitment', 2],
      ['teamwork', 5],
      ['collaboration', 4],
      ['support', 3],
      ['trust', 2],
      ['energy', 5],
      ['momentum', 4],
      ['vitality', 3],
      ['pace', 2],
      ['results', 5],
      ['impact', 4],
      ['delivery', 3],
      ['success', 2],
      ['efficiency', 5],
      ['productivity', 4],
      ['output', 3],
      ['flow', 2],
      ['initiative', 5],
      ['ownership', 4],
      ['action', 3],
      ['start', 2],
      ['stress', 5],
      ['pressure', 4],
      ['fatigue', 3],
      ['tension', 2],
      ['balance', 5],
      ['control', 4],
      ['stability', 3],
      ['focus', 2],
      ['deadline', 5],
      ['urgency', 4],
      ['timing', 3],
      ['rush', 2],
      ['planning', 5],
      ['structure', 4],
      ['order', 3],
      ['forecast', 2],
      ['blocker', 5],
      ['delay', 4],
      ['issue', 3],
      ['conflict', 2],
      ['feedback', 5],
      ['response', 4],
      ['communication', 3],
      ['listening', 2],
      ['resistance', 5],
      ['friction', 4],
      ['pushback', 3],
      ['objection', 2],
      ['inspiration', 5],
      ['creativity', 4],
      ['spark', 3],
      ['vision', 2],
      ['drive', 5],
      ['momentum', 4],
      ['energy', 3],
      ['fire', 2],
      ['iteration', 5],
      ['refinement', 4],
      ['revision', 3],
      ['adjustment', 2],
      ['conflict', 5],
      ['tension', 4],
      ['argument', 3],
      ['drama', 2],
      ['mistake', 5],
      ['error', 4],
      ['failure', 3],
      ['misstep', 2],
      ['sync', 5],
      ['alignment', 4],
      ['timing', 3],
      ['harmony', 2],
      ['review', 5],
      ['evaluation', 4],
      ['reflection', 3],
      ['rating', 2],
      ['burnout', 5],
      ['exhaustion', 4],
      ['boredom', 3],
      ['demotivation', 2],
      ['support', 5],
      ['empathy', 4],
      ['trust', 3],
      ['care', 2],
      ['clarity', 5],
      ['consistency', 4],
      ['alignment', 3],
      ['direction', 2],
      ['insight', 5],
      ['awareness', 4],
      ['realization', 3],
      ['discovery', 2],
      ['connection', 5],
      ['bonding', 4],
      ['trust', 3],
      ['belonging', 2],
      ['experiment', 5],
      ['risk', 4],
      ['change', 3],
      ['trial', 2],
      ['trust', 5],
      ['respect', 4],
      ['focus', 3],
      ['ownership', 2],
      ['speed', 5],
      ['quality', 4],
      ['confidence', 3],
      ['clarity', 2],
      ['initiative', 5],
      ['discipline', 4],
      ['presence', 3],
      ['readiness', 2],
      ['alignment', 5],
      ['communication', 4],
      ['transparency', 3],
      ['support', 2],
      ['patience', 5],
      ['curiosity', 4],
      ['reliability', 3],
      ['autonomy', 2],
      ['culture', 5],
      ['humor', 4],
      ['fun', 3],
      ['trust', 2],
      ['feedback', 5],
      ['recognition', 4],
      ['visibility', 3],
      ['praise', 2],
      ['leadership', 5],
      ['ownership', 4],
      ['coaching', 3],
      ['mentorship', 2],
      ['learning', 5],
      ['challenge', 4],
      ['growth', 3],
      ['resilience', 2],
      ['decisions', 5],
      ['tradeoffs', 4],
      ['confidence', 3],
      ['context', 2],
      ['focus', 5],
      ['effort', 4],
      ['energy', 3],
      ['priority', 2],
      ['influence', 5],
      ['respect', 4],
      ['trust', 3],
      ['openness', 2],
      ['honesty', 5],
      ['integrity', 4],
      ['courage', 3],
      ['initiative', 2],
      ['conflict', 5],
      ['calmness', 4],
      ['dialogue', 3],
      ['resolution', 2],
      ['backlog', 5],
      ['scope', 4],
      ['planning', 3],
      ['delivery', 2],
      ['process', 5],
      ['rules', 4],
      ['rhythm', 3],
      ['habits', 2],
      ['design', 5],
      ['code', 4],
      ['testing', 3],
      ['releases', 2],
      ['bugs', 5],
      ['refactor', 4],
      ['review', 3],
      ['merge', 2],
      ['estimates', 5],
      ['delays', 4],
      ['timeouts', 3],
      ['overwork', 2],
      ['morale', 5],
      ['frustration', 4],
      ['boredom', 3],
      ['passion', 2],
      ['ownership', 5],
      ['freedom', 4],
      ['focus', 3],
      ['agency', 2],
      ['value', 5],
      ['impact', 4],
      ['success', 3],
      ['metrics', 2],
      ['change', 5],
      ['chaos', 4],
      ['pivot', 3],
      ['stability', 2],
    ];
  }, []);

  useEffect(() => {
    const rootStyles = getComputedStyle(document.documentElement);
    const color = rootStyles.getPropertyValue('--foreground');
    const backgroundColor = rootStyles.getPropertyValue('--background');
    const gap = 8;

    if (canvasRef.current) {
      const canvasWidth = canvasRef.current.width;

      // Build the cloud
      WordCloud(canvasRef.current, {
        list,
        gridSize: Math.round((gap * canvasWidth) / 1024),
        weightFactor: (size: number) => (Math.pow(size, 2.3) * canvasWidth) / 1024,
        minSize: 16,
        color,
        backgroundColor,
      });
    }
  }, [width, height, list]);

  return (
    <ScratchToReveal width={width} height={height} className="overflow-hidden">
      <canvas width={width} height={height} ref={canvasRef} />
    </ScratchToReveal>
  );
};

export default RetroWordcloud;
