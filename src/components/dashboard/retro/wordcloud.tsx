'use client';

import { ScratchToReveal } from '@/components/magicui/scratch-to-reveal';
import { useTranslations } from 'next-intl';
import { useEffect, useMemo, useRef } from 'react';
import { useWindowSize } from 'usehooks-ts';
import WordCloud, { type ListEntry } from 'wordcloud';

const RetroWordcloud = () => {
  const { width = 0, height = 0 } = useWindowSize();
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const t = useTranslations('components.dashboard.retro.wordcloud');
  const list = useMemo<ListEntry[]>(() => {
    return [
      [t('words.focus'), 5],
      [t('words.clarity'), 4],
      [t('words.attention'), 3],
      [t('words.vision'), 2],
      [t('words.growth'), 5],
      [t('words.learning'), 4],
      [t('words.progress'), 3],
      [t('words.skill'), 2],
      [t('words.motivation'), 5],
      [t('words.drive'), 4],
      [t('words.engagement'), 3],
      [t('words.commitment'), 2],
      [t('words.teamwork'), 5],
      [t('words.collaboration'), 4],
      [t('words.support'), 3],
      [t('words.trust'), 2],
      [t('words.energy'), 5],
      [t('words.momentum'), 4],
      [t('words.vitality'), 3],
      [t('words.pace'), 2],
      [t('words.results'), 5],
      [t('words.impact'), 4],
      [t('words.delivery'), 3],
      [t('words.success'), 2],
      [t('words.efficiency'), 5],
      [t('words.productivity'), 4],
      [t('words.output'), 3],
      [t('words.flow'), 2],
      [t('words.initiative'), 5],
      [t('words.ownership'), 4],
      [t('words.action'), 3],
      [t('words.start'), 2],
      [t('words.stress'), 5],
      [t('words.pressure'), 4],
      [t('words.fatigue'), 3],
      [t('words.tension'), 2],
      [t('words.balance'), 5],
      [t('words.control'), 4],
      [t('words.stability'), 3],
      [t('words.focus'), 2],
      [t('words.deadline'), 5],
      [t('words.urgency'), 4],
      [t('words.timing'), 3],
      [t('words.rush'), 2],
      [t('words.planning'), 5],
      [t('words.structure'), 4],
      [t('words.order'), 3],
      [t('words.forecast'), 2],
      [t('words.blocker'), 5],
      [t('words.delay'), 4],
      [t('words.issue'), 3],
      [t('words.conflict'), 2],
      [t('words.feedback'), 5],
      [t('words.response'), 4],
      [t('words.communication'), 3],
      [t('words.listening'), 2],
      [t('words.resistance'), 5],
      [t('words.friction'), 4],
      [t('words.pushback'), 3],
      [t('words.objection'), 2],
      [t('words.inspiration'), 5],
      [t('words.creativity'), 4],
      [t('words.spark'), 3],
      [t('words.vision'), 2],
      [t('words.drive'), 5],
      [t('words.momentum'), 4],
      [t('words.energy'), 3],
      [t('words.fire'), 2],
      [t('words.iteration'), 5],
      [t('words.refinement'), 4],
      [t('words.revision'), 3],
      [t('words.adjustment'), 2],
      [t('words.conflict'), 5],
      [t('words.tension'), 4],
      [t('words.argument'), 3],
      [t('words.drama'), 2],
      [t('words.mistake'), 5],
      [t('words.error'), 4],
      [t('words.failure'), 3],
      [t('words.misstep'), 2],
      [t('words.sync'), 5],
      [t('words.alignment'), 4],
      [t('words.timing'), 3],
      [t('words.harmony'), 2],
      [t('words.review'), 5],
      [t('words.evaluation'), 4],
      [t('words.reflection'), 3],
      [t('words.rating'), 2],
      [t('words.burnout'), 5],
      [t('words.exhaustion'), 4],
      [t('words.boredom'), 3],
      [t('words.demotivation'), 2],
      [t('words.support'), 5],
      [t('words.empathy'), 4],
      [t('words.trust'), 3],
      [t('words.care'), 2],
      [t('words.clarity'), 5],
      [t('words.consistency'), 4],
      [t('words.alignment'), 3],
      [t('words.direction'), 2],
      [t('words.insight'), 5],
      [t('words.awareness'), 4],
      [t('words.realization'), 3],
      [t('words.discovery'), 2],
      [t('words.connection'), 5],
      [t('words.bonding'), 4],
      [t('words.trust'), 3],
      [t('words.belonging'), 2],
      [t('words.experiment'), 5],
      [t('words.risk'), 4],
      [t('words.change'), 3],
      [t('words.trial'), 2],
      [t('words.trust'), 5],
      [t('words.respect'), 4],
      [t('words.focus'), 3],
      [t('words.ownership'), 2],
      [t('words.speed'), 5],
      [t('words.quality'), 4],
      [t('words.confidence'), 3],
      [t('words.clarity'), 2],
      [t('words.initiative'), 5],
      [t('words.discipline'), 4],
      [t('words.presence'), 3],
      [t('words.readiness'), 2],
      [t('words.alignment'), 5],
      [t('words.communication'), 4],
      [t('words.transparency'), 3],
      [t('words.support'), 2],
      [t('words.patience'), 5],
      [t('words.curiosity'), 4],
      [t('words.reliability'), 3],
      [t('words.autonomy'), 2],
      [t('words.culture'), 5],
      [t('words.humor'), 4],
      [t('words.fun'), 3],
      [t('words.trust'), 2],
      [t('words.feedback'), 5],
      [t('words.recognition'), 4],
      [t('words.visibility'), 3],
      [t('words.praise'), 2],
      [t('words.leadership'), 5],
      [t('words.ownership'), 4],
      [t('words.coaching'), 3],
      [t('words.mentorship'), 2],
      [t('words.learning'), 5],
      [t('words.challenge'), 4],
      [t('words.growth'), 3],
      [t('words.resilience'), 2],
      [t('words.decisions'), 5],
      [t('words.tradeoffs'), 4],
      [t('words.confidence'), 3],
      [t('words.context'), 2],
      [t('words.focus'), 5],
      [t('words.effort'), 4],
      [t('words.energy'), 3],
      [t('words.priority'), 2],
      [t('words.respect'), 4],
      [t('words.trust'), 3],
      [t('words.openness'), 2],
      [t('words.honesty'), 5],
      [t('words.integrity'), 4],
      [t('words.courage'), 3],
      [t('words.initiative'), 2],
      [t('words.conflict'), 5],
      [t('words.calmness'), 4],
      [t('words.dialogue'), 3],
      [t('words.resolution'), 2],
      [t('words.backlog'), 5],
      [t('words.scope'), 4],
      [t('words.planning'), 3],
      [t('words.delivery'), 2],
      [t('words.rules'), 4],
      [t('words.rhythm'), 3],
      [t('words.habits'), 2],
      [t('words.design'), 5],
      [t('words.code'), 4],
      [t('words.testing'), 3],
      [t('words.releases'), 2],
      [t('words.bugs'), 5],
      [t('words.refactor'), 4],
      [t('words.review'), 3],
      [t('words.merge'), 2],
      [t('words.estimates'), 5],
      [t('words.delays'), 4],
      [t('words.timeouts'), 3],
      [t('words.overwork'), 2],
      [t('words.morale'), 5],
      [t('words.frustration'), 4],
      [t('words.boredom'), 3],
      [t('words.passion'), 2],
      [t('words.ownership'), 5],
      [t('words.freedom'), 4],
      [t('words.focus'), 3],
      [t('words.agency'), 2],
      [t('words.value'), 5],
      [t('words.impact'), 4],
      [t('words.success'), 3],
      [t('words.metrics'), 2],
      [t('words.change'), 5],
      [t('words.chaos'), 4],
      [t('words.pivot'), 3],
      [t('words.stability'), 2],
    ];
  }, [t]);

  useEffect(() => {
    const rootStyles = getComputedStyle(document.documentElement);
    const color = rootStyles.getPropertyValue('--foreground');
    const backgroundColor = rootStyles.getPropertyValue('--background');
    const gap = 8;

    if (canvasRef.current) {
      const canvasWidth = canvasRef.current.width;

      // Build the cloud
      WordCloud(canvasRef.current, {
        list,
        gridSize: Math.round((gap * canvasWidth) / 1024),
        weightFactor: (size: number) => (Math.pow(size, 2.3) * canvasWidth) / 1024,
        minSize: 16,
        color,
        backgroundColor,
        shuffle: true,
        rotateRatio: 1,
      });
    }
  }, [width, height, list]);

  return (
    <ScratchToReveal width={width} height={height} className="overflow-hidden">
      <canvas width={width} height={height} ref={canvasRef} />
    </ScratchToReveal>
  );
};

export default RetroWordcloud;
